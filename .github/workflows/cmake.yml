name: Build on Everything

on:
  workflow_dispatch:
  #push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  CMAKE_BUILD_TYPE: Release

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
   
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Get lastest CMake
      uses: lukka/get-cmake@latest

    - name: Restore artifacts, or setup vcpkg (do not install any package)
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgJsonGlob: vcpkg.json

    - name: Prepare for build (All)
      run: python -m pip install jinja2
    
    - name: Prepare for build (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install libgl1-mesa-dev libxxf86vm-dev
        sudo apt-get install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev
      # sudo apt-get update
      # sudo apt-get upgrade

    - name: run CMake
      uses: lukka/run-cmake@v10
      with:
        configurePreset: default-vcpkg
        buildPreset: build-default
    #- name: Configure CMake
    #  run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    #- name: Build and install
    #  run: | 
    #    cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j
    #    cmake --install ${{github.workspace}}/build --prefix ${{github.workspace}}/install

    #- name: Save build artifacts
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: Build result ${{ matrix.os }}
    #    path: ${{github.workspace}}/install

